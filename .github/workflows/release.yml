name: Release

on:
  push:
    branches:
      - master
      - develop
    tags:
      - '*'
      -
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev
    - name: Test with pytest
      run: |
        cd tests && pipenv run pipenv run pytest --cov=.. --cov-report=xml
    - uses: codecov/codecov-action@v1
      with:
        file: tests/coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Runtime test
      run: |
        pipenv run python vpnmon.py --debug --interval 1 --client-status tests/client.status &
        TESTPIP=$?
        sleep 5
        curl -s localhost:8080/metric | grep '^openvpn_client_auth_read_bytes_total'
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: crazy-max/ghaction-docker-meta@v1
      id: docker_meta
      with:
        images: clambin/vpnmon
        tag-sha: true
        tag-semver: |
          {{version}}
          {{major}}.{{minor}}
    - uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm/v7
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
  deploy:
    needs: package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: Azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
    - name: get tag
      id: image_tag
      run: echo "::set-output name=sha_short::sha-$(echo ${GITHUB_SHA} | cut -c1-7)"
    - uses: Azure/k8s-deploy@v1
      with:
        namespace: media
        manifests: |
          manifests/vpnmon-deployment.yml
        images: |
          clambin/vpnmon:${{ steps.image_tag.outputs.sha_short }}